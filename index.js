"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.customParam = exports.initMethodAsync = exports.customInjectFn = exports.dynamicFactory = exports.injectLazy = exports.override = exports.factory = exports.lazy = exports.alias = exports.aliasFactory = exports.injectValue = exports.injectObjectProperty = exports.injectFactory = exports.injectDictionary = exports.injectArray = exports.initMethod = exports.injectFactoryMethod = exports.injectAlias = exports.injectAliasFactory = exports.inject = exports.singleton = exports.injectParam = exports.define = exports.InjectDefineSymbol = exports.Util = exports.Define = exports.createContainer = exports.Injector = void 0;
exports.default = require('./lib/inject');
var inject_1 = require("./lib/inject");
Object.defineProperty(exports, "Injector", { enumerable: true, get: function () { return inject_1.Injector; } });
Object.defineProperty(exports, "createContainer", { enumerable: true, get: function () { return inject_1.createContainer; } });
var define_1 = require("./lib/define");
Object.defineProperty(exports, "Define", { enumerable: true, get: function () { return define_1.Define; } });
var util_1 = require("./lib/util");
Object.defineProperty(exports, "Util", { enumerable: true, get: function () { return util_1.Util; } });
var decorators_1 = require("./lib/decorators");
Object.defineProperty(exports, "InjectDefineSymbol", { enumerable: true, get: function () { return decorators_1.InjectDefineSymbol; } });
Object.defineProperty(exports, "define", { enumerable: true, get: function () { return decorators_1.define; } });
Object.defineProperty(exports, "injectParam", { enumerable: true, get: function () { return decorators_1.injectParam; } });
Object.defineProperty(exports, "singleton", { enumerable: true, get: function () { return decorators_1.singleton; } });
Object.defineProperty(exports, "inject", { enumerable: true, get: function () { return decorators_1.inject; } });
Object.defineProperty(exports, "injectAliasFactory", { enumerable: true, get: function () { return decorators_1.injectAliasFactory; } });
Object.defineProperty(exports, "injectAlias", { enumerable: true, get: function () { return decorators_1.injectAlias; } });
Object.defineProperty(exports, "injectFactoryMethod", { enumerable: true, get: function () { return decorators_1.injectFactoryMethod; } });
Object.defineProperty(exports, "initMethod", { enumerable: true, get: function () { return decorators_1.initMethod; } });
Object.defineProperty(exports, "injectArray", { enumerable: true, get: function () { return decorators_1.injectArray; } });
Object.defineProperty(exports, "injectDictionary", { enumerable: true, get: function () { return decorators_1.injectDictionary; } });
Object.defineProperty(exports, "injectFactory", { enumerable: true, get: function () { return decorators_1.injectFactory; } });
Object.defineProperty(exports, "injectObjectProperty", { enumerable: true, get: function () { return decorators_1.injectObjectProperty; } });
Object.defineProperty(exports, "injectValue", { enumerable: true, get: function () { return decorators_1.injectValue; } });
Object.defineProperty(exports, "aliasFactory", { enumerable: true, get: function () { return decorators_1.aliasFactory; } });
Object.defineProperty(exports, "alias", { enumerable: true, get: function () { return decorators_1.alias; } });
Object.defineProperty(exports, "lazy", { enumerable: true, get: function () { return decorators_1.lazy; } });
Object.defineProperty(exports, "factory", { enumerable: true, get: function () { return decorators_1.factory; } });
Object.defineProperty(exports, "override", { enumerable: true, get: function () { return decorators_1.override; } });
Object.defineProperty(exports, "injectLazy", { enumerable: true, get: function () { return decorators_1.injectLazy; } });
Object.defineProperty(exports, "dynamicFactory", { enumerable: true, get: function () { return decorators_1.dynamicFactory; } });
Object.defineProperty(exports, "customInjectFn", { enumerable: true, get: function () { return decorators_1.customInjectFn; } });
Object.defineProperty(exports, "initMethodAsync", { enumerable: true, get: function () { return decorators_1.initMethodAsync; } });
Object.defineProperty(exports, "customParam", { enumerable: true, get: function () { return decorators_1.customParam; } });
//# sourceMappingURL=index.js.map